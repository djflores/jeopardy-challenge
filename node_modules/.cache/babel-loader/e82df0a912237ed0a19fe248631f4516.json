{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js\";\nimport React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nexport default class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    let value = this.context;\n\n    try {\n      axios('http://jservice.io/api/categories?count=100').then(async response => {\n        await response.data.map(item => {\n          const {\n            clues_count\n          } = item;\n\n          if (clues_count >= value.categoryCount) {\n            this.setState({\n              categories: this.state.categories.concat(item)\n            });\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      categories\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, categories.map((item, index) => {\n      const {\n        title\n      } = item;\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 36\n        }\n      }, title);\n    })));\n  }\n\n}\nBoard.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js"],"names":["React","Component","AppContext","axios","Board","state","categories","isLoading","componentDidMount","value","context","then","response","data","map","item","clues_count","categoryCount","setState","concat","error","console","log","render","index","title","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCI,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAFiC;AAAA;;AAMzCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKC,OAAjB;;AACA,QAAI;AACAP,MAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDQ,IAArD,CACI,MAAOC,QAAP,IAAoB;AAChB,cAAMA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAU;AAC9B,gBAAM;AAAEC,YAAAA;AAAF,cAAkBD,IAAxB;;AACA,cAAIC,WAAW,IAAIP,KAAK,CAACQ,aAAzB,EAAwC;AACpC,iBAAKC,QAAL,CAAc;AACVZ,cAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBa,MAAtB,CAA6BJ,IAA7B;AADF,aAAd;AAGH;AACJ,SAPK,CAAN;AAQA,aAAKG,QAAL,CAAc;AAAEX,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAXL;AAaH,KAdD,CAcE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,KAAL,CAAWE,SAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAGG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,UAAU,CAACQ,GAAX,CAAe,CAACC,IAAD,EAAOS,KAAP,KAAiB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAYV,IAAlB;AAEA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIU,KAAJ,CAAP;AACH,KAJA,CADL,CAJR,CADJ;AAeH;;AA5CwC;AAAxBrB,K,CACVsB,W,GAAcxB,U","sourcesContent":["import React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\n\nexport default class Board extends Component {\n    static contextType = AppContext;\n    state = {\n        categories: [],\n        isLoading: true,\n    };\n    componentDidMount() {\n        let value = this.context;\n        try {\n            axios('http://jservice.io/api/categories?count=100').then(\n                async (response) => {\n                    await response.data.map((item) => {\n                        const { clues_count } = item;\n                        if (clues_count >= value.categoryCount) {\n                            this.setState({\n                                categories: this.state.categories.concat(item),\n                            });\n                        }\n                    });\n                    this.setState({ isLoading: false });\n                }\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { categories } = this.state;\n        return (\n            <div className=\"Board\">\n                {this.state.isLoading ? (\n                    <h2>Loading...</h2>\n                ) : (\n                    <React.Fragment>\n                        {categories.map((item, index) => {\n                            const { title } = item;\n\n                            return <p>{title}</p>;\n                        })}\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js\";\nimport React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nexport default class Box extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCategory: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n    axios(`http://jservice.io/api/clues?category=${id}`).then(response => {\n      this.setState({\n        clues: this.state.clues.concat([response.data])\n      });\n    });\n  }\n\n  renderBox() {\n    const {\n      isCategory,\n      clue,\n      id\n    } = this.props;\n    const {\n      value\n    } = clue || {};\n    const context = this.context;\n\n    if (isCategory) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, this.props.category);\n    } else {\n      return Array(context.clueCount).fill();\n    }\n  }\n\n  render() {\n    return this.renderBox();\n  }\n\n}\nBox.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js"],"names":["React","Component","AppContext","axios","Box","state","isCategory","componentDidMount","id","props","then","response","setState","clues","concat","data","renderBox","clue","value","context","category","Array","clueCount","fill","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACJC,MAAAA,UAAU,EAAE;AADR,KAF+B;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;AACAN,IAAAA,KAAK,CAAE,yCAAwCK,EAAG,EAA7C,CAAL,CAAqDE,IAArD,CACKC,QAAD,IAAc;AACV,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwB,CAACH,QAAQ,CAACI,IAAV,CAAxB;AADG,OAAd;AAGH,KALL;AAOH;;AAEDC,EAAAA,SAAS,GAAG;AACR,UAAM;AAAEV,MAAAA,UAAF;AAAcW,MAAAA,IAAd;AAAoBT,MAAAA;AAApB,QAA2B,KAAKC,KAAtC;AACA,UAAM;AAAES,MAAAA;AAAF,QAAYD,IAAI,IAAI,EAA1B;AACA,UAAME,OAAO,GAAG,KAAKA,OAArB;;AAEA,QAAIb,UAAJ,EAAgB;AACZ,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKG,KAAL,CAAWW,QAAhB,CAAP;AACH,KAFD,MAEO;AACH,aAAOC,KAAK,CAACF,OAAO,CAACG,SAAT,CAAL,CAAyBC,IAAzB,EAAP;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKR,SAAL,EAAP;AACH;;AA/BsC;AAAtBZ,G,CACVqB,W,GAAcvB,U","sourcesContent":["import React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\n\nexport default class Box extends Component {\n    static contextType = AppContext;\n    state = {\n        isCategory: false,\n    };\n\n    componentDidMount() {\n        const { id } = this.props;\n        axios(`http://jservice.io/api/clues?category=${id}`).then(\n            (response) => {\n                this.setState({\n                    clues: this.state.clues.concat([response.data]),\n                });\n            }\n        );\n    }\n\n    renderBox() {\n        const { isCategory, clue, id } = this.props;\n        const { value } = clue || {};\n        const context = this.context;\n\n        if (isCategory) {\n            return <li>{this.props.category}</li>;\n        } else {\n            return Array(context.clueCount).fill();\n        }\n    }\n\n    render() {\n        return this.renderBox();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
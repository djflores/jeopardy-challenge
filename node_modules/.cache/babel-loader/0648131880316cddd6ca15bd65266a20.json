{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case 'reset':\n      const initialState = {\n        categories: [],\n        clues: [],\n        validBoard: false,\n        dailyDouble: {\n          id: 0,\n          index: 0\n        },\n        offset: state.offset,\n        answeredClues: [],\n        isLoading: true\n      };\n      state = initialState;\n      return { ...state,\n        offset: state.offset + 100\n      };\n\n    case 'setCategories':\n      return { ...state,\n        categories: [...state.categories, action.payload]\n      };\n\n    case 'setClues':\n      return { ...state,\n        clues: [...state.clues, action.payload]\n      };\n\n    case 'answeredClues':\n      return { ...state,\n        answeredClues: [...state.answeredClues, action.payload]\n      };\n\n    case 'isLoading':\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case 'dailyDouble':\n      const {\n        id\n      } = state.categories[Math.floor(Math.random() * state.categories.length)];\n      return { ...state,\n        dailyDouble: {\n          id: id,\n          index: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/context/reducer.js"],"names":["reducer","state","action","type","initialState","categories","clues","validBoard","dailyDouble","id","index","offset","answeredClues","isLoading","payload","Math","floor","random","length"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,YAAMC,YAAY,GAAG;AACjBC,QAAAA,UAAU,EAAE,EADK;AAEjBC,QAAAA,KAAK,EAAE,EAFU;AAGjBC,QAAAA,UAAU,EAAE,KAHK;AAIjBC,QAAAA,WAAW,EAAE;AACTC,UAAAA,EAAE,EAAE,CADK;AAETC,UAAAA,KAAK,EAAE;AAFE,SAJI;AAQjBC,QAAAA,MAAM,EAAEV,KAAK,CAACU,MARG;AASjBC,QAAAA,aAAa,EAAE,EATE;AAUjBC,QAAAA,SAAS,EAAE;AAVM,OAArB;AAYAZ,MAAAA,KAAK,GAAGG,YAAR;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYU,QAAAA,MAAM,EAAEV,KAAK,CAACU,MAAN,GAAe;AAAnC,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHI,QAAAA,UAAU,EAAE,CAAC,GAAGJ,KAAK,CAACI,UAAV,EAAsBH,MAAM,CAACY,OAA7B;AAFT,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGb,KADA;AAEHK,QAAAA,KAAK,EAAE,CAAC,GAAGL,KAAK,CAACK,KAAV,EAAiBJ,MAAM,CAACY,OAAxB;AAFJ,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGb,KADA;AAEHW,QAAAA,aAAa,EAAE,CAAC,GAAGX,KAAK,CAACW,aAAV,EAAyBV,MAAM,CAACY,OAAhC;AAFZ,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGb,KADA;AAEHY,QAAAA,SAAS,EAAEX,MAAM,CAACY;AAFf,OAAP;;AAIJ,SAAK,aAAL;AACI,YAAM;AAAEL,QAAAA;AAAF,UAASR,KAAK,CAACI,UAAN,CAAiBU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,KAAK,CAACI,UAAN,CAAiBa,MAA5C,CAAjB,CAAf;AAEA,aAAO,EACH,GAAGjB,KADA;AAEHO,QAAAA,WAAW,EAAE;AACTC,UAAAA,EAAE,EAAEA,EADK;AAETC,UAAAA,KAAK,EAAER,MAAM,CAACY;AAFL;AAFV,OAAP;;AAOJ;AACI,aAAOb,KAAP;AA/CR;AAiDH,CAlDD;;AAoDA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n    switch (action.type) {\n        case 'reset':\n            const initialState = {\n                categories: [],\n                clues: [],\n                validBoard: false,\n                dailyDouble: {\n                    id: 0,\n                    index: 0,\n                },\n                offset: state.offset,\n                answeredClues: [],\n                isLoading: true,\n            };\n            state = initialState;\n            return { ...state, offset: state.offset + 100 };\n        case 'setCategories':\n            return {\n                ...state,\n                categories: [...state.categories, action.payload],\n            };\n        case 'setClues':\n            return {\n                ...state,\n                clues: [...state.clues, action.payload],\n            };\n        case 'answeredClues':\n            return {\n                ...state,\n                answeredClues: [...state.answeredClues, action.payload],\n            };\n        case 'isLoading':\n            return {\n                ...state,\n                isLoading: action.payload,\n            };\n        case 'dailyDouble':\n            const { id } = state.categories[Math.floor(Math.random() * state.categories.length)];\n\n            return {\n                ...state,\n                dailyDouble: {\n                    id: id,\n                    index: action.payload,\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
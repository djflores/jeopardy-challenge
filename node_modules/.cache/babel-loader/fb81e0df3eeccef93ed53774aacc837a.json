{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js\";\nimport React, { createContext, useContext, useEffect, useReducer, useState } from 'react';\nconst GlobalState = createContext();\nconst initialState = {\n  categories: [],\n  clues: [],\n  validBoard: false,\n  offset: 0,\n  dailyDouble: 0,\n  answeredClues: [],\n  isLoading: true\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'reset':\n      return initialState;\n\n    case 'categories':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const AppProvider = children => {\n  const [state, dispatch] = useReducer(reducer, initialState); // const [clueCount, setClueCount] = useState();\n  // const [categoryCount, setCategoryCount] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  // const [clues, setClues] = useState([]);\n  // const [validBoard, setValidBoard] = useState(false);\n  // const [offset, setOffset] = useState(0);\n  // const [dailyDouble, setDailyDouble] = useState();\n  // const [answeredClues, setAnsweredClues] = useState([]);\n  // const [isLoading, setLoading] = useState(true);\n  // const [initialState, setInitialState] = useState();\n\n  return /*#__PURE__*/React.createElement(GlobalState.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default A = () => useContext(GlobalState);","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js"],"names":["React","createContext","useContext","useEffect","useReducer","useState","GlobalState","initialState","categories","clues","validBoard","offset","dailyDouble","answeredClues","isLoading","reducer","state","action","type","payload","AppProvider","children","dispatch","A"],"mappings":";AAAA,OAAOA,KAAP,IACIC,aADJ,EAEIC,UAFJ,EAGIC,SAHJ,EAIIC,UAJJ,EAKIC,QALJ,QAMO,OANP;AAQA,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AACA,MAAMM,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,MAAM,EAAE,CAJS;AAKjBC,EAAAA,WAAW,EAAE,CALI;AAMjBC,EAAAA,aAAa,EAAE,EANE;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,aAAOX,YAAP;;AACJ,SAAK,YAAL;AACI,aAAOU,MAAM,CAACE,OAAd;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD;;AAUA,OAAO,MAAMI,WAAW,GAAIC,QAAD,IAAc;AACrC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBlB,UAAU,CAACW,OAAD,EAAUR,YAAV,CAApC,CADqC,CAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADJ;AAKH,CAnBM;AAqBP,eAAeE,CAAC,GAAG,MAAMrB,UAAU,CAACI,WAAD,CAAnC","sourcesContent":["import React, {\n    createContext,\n    useContext,\n    useEffect,\n    useReducer,\n    useState,\n} from 'react';\n\nconst GlobalState = createContext();\nconst initialState = {\n    categories: [],\n    clues: [],\n    validBoard: false,\n    offset: 0,\n    dailyDouble: 0,\n    answeredClues: [],\n    isLoading: true,\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'reset':\n            return initialState;\n        case 'categories':\n            return action.payload;\n        default:\n            return state;\n    }\n};\nexport const AppProvider = (children) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    // const [clueCount, setClueCount] = useState();\n    // const [categoryCount, setCategoryCount] = useState([]);\n    // const [categories, setCategories] = useState([]);\n    // const [clues, setClues] = useState([]);\n    // const [validBoard, setValidBoard] = useState(false);\n    // const [offset, setOffset] = useState(0);\n    // const [dailyDouble, setDailyDouble] = useState();\n    // const [answeredClues, setAnsweredClues] = useState([]);\n    // const [isLoading, setLoading] = useState(true);\n    // const [initialState, setInitialState] = useState();\n\n    return (\n        <GlobalState.Provider value={{ state, dispatch }}>\n            {children}\n        </GlobalState.Provider>\n    );\n};\n\nexport default A = () => useContext(GlobalState);\n"]},"metadata":{},"sourceType":"module"}
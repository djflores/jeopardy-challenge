{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/AppContext.js\";\nimport React, { createContext, useState } from 'react';\nexport const AppContext = createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  // const [clueCount, setClueCount] = useState();\n  // const [categoryCount, setCategoryCount] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  // const [clues, setClues] = useState([]);\n  // const [validBoard, setValidBoard] = useState(false);\n  // const [offset, setOffset] = useState(0);\n  // const [dailyDouble, setDailyDouble] = useState();\n  // const [answeredClues, setAnsweredClues] = useState([]);\n  // const [isLoading, setLoading] = useState(true);\n  // const [initialState, setInitialState] = useState();\n  const initialState = {\n    clueCount: 0,\n    categoryCount: 0,\n    categories: [],\n    clues: [],\n    validBoard: false,\n    offset: 0,\n    dailyDouble: -1,\n    answeredClues: [],\n    isLoading: true\n  };\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      initialState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/AppContext.js"],"names":["React","createContext","useState","AppContext","AppProvider","children","initialState","clueCount","categoryCount","categories","clues","validBoard","offset","dailyDouble","answeredClues","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,UAAU,GAAGF,aAAa,EAAhC;AAEP,OAAO,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,CADM;AAEjBC,IAAAA,aAAa,EAAE,CAFE;AAGjBC,IAAAA,UAAU,EAAE,EAHK;AAIjBC,IAAAA,KAAK,EAAE,EAJU;AAKjBC,IAAAA,UAAU,EAAE,KALK;AAMjBC,IAAAA,MAAM,EAAE,CANS;AAOjBC,IAAAA,WAAW,EAAE,CAAC,CAPG;AAQjBC,IAAAA,aAAa,EAAE,EARE;AASjBC,IAAAA,SAAS,EAAE;AATM,GAArB;AAWA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHT,MAAAA;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QALL,CADJ;AASH,CA/BM","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n    // const [clueCount, setClueCount] = useState();\n    // const [categoryCount, setCategoryCount] = useState([]);\n    // const [categories, setCategories] = useState([]);\n    // const [clues, setClues] = useState([]);\n    // const [validBoard, setValidBoard] = useState(false);\n    // const [offset, setOffset] = useState(0);\n    // const [dailyDouble, setDailyDouble] = useState();\n    // const [answeredClues, setAnsweredClues] = useState([]);\n    // const [isLoading, setLoading] = useState(true);\n    // const [initialState, setInitialState] = useState();\n    const initialState = {\n        clueCount: 0,\n        categoryCount: 0,\n        categories: [],\n        clues: [],\n        validBoard: false,\n        offset: 0,\n        dailyDouble: -1,\n        answeredClues: [],\n        isLoading: true,\n    };\n    return (\n        <AppContext.Provider\n            value={{\n                initialState,\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
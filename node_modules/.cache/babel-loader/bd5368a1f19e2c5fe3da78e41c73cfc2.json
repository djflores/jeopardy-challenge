{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nconst initialState = {\n  categories: [],\n  clues: [],\n  validBoard: false,\n  offset: 0,\n  dailyDouble: 0,\n  answeredClues: [],\n  isLoading: true\n};\nconst GlobalState = React.createContext({\n  categories: [],\n  clues: [],\n  validBoard: false,\n  offset: 0,\n  dailyDouble: 0,\n  answeredClues: [],\n  isLoading: true\n});\nexport default GlobalState;\nexport const AppProvider = props => {\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'reset':\n        return initialState;\n\n      case 'categories':\n        return action.payload;\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState); // const [clueCount, setClueCount] = useState();\n  // const [categoryCount, setCategoryCount] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  // const [clues, setClues] = useState([]);\n  // const [validBoard, setValidBoard] = useState(false);\n  // const [offset, setOffset] = useState(0);\n  // const [dailyDouble, setDailyDouble] = useState();\n  // const [answeredClues, setAnsweredClues] = useState([]);\n  // const [isLoading, setLoading] = useState(true);\n  // const [initialState, setInitialState] = useState();\n\n  return /*#__PURE__*/React.createElement(GlobalState.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js"],"names":["React","createContext","useReducer","initialState","categories","clues","validBoard","offset","dailyDouble","answeredClues","isLoading","GlobalState","AppProvider","props","reducer","state","action","type","payload","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,MAAM,EAAE,CAJS;AAKjBC,EAAAA,WAAW,EAAE,CALI;AAMjBC,EAAAA,aAAa,EAAE,EANE;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;AAUA,MAAMC,WAAW,GAAGX,KAAK,CAACC,aAAN,CAAoB;AACpCG,EAAAA,UAAU,EAAE,EADwB;AAEpCC,EAAAA,KAAK,EAAE,EAF6B;AAGpCC,EAAAA,UAAU,EAAE,KAHwB;AAIpCC,EAAAA,MAAM,EAAE,CAJ4B;AAKpCC,EAAAA,WAAW,EAAE,CALuB;AAMpCC,EAAAA,aAAa,EAAE,EANqB;AAOpCC,EAAAA,SAAS,EAAE;AAPyB,CAApB,CAApB;AAUA,eAAeC,WAAf;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,OAAL;AACI,eAAOd,YAAP;;AACJ,WAAK,YAAL;AACI,eAAOa,MAAM,CAACE,OAAd;;AACJ;AACI,eAAOH,KAAP;AANR;AAQH,GATD;;AAUA,QAAM,CAACA,KAAD,EAAQI,QAAR,IAAoBjB,UAAU,CAACY,OAAD,EAAUX,YAAV,CAApC,CAXkC,CAYlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAF;AAASI,MAAAA;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,QADX,CADJ;AAKH,CA5BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nconst initialState = {\n    categories: [],\n    clues: [],\n    validBoard: false,\n    offset: 0,\n    dailyDouble: 0,\n    answeredClues: [],\n    isLoading: true,\n};\n\nconst GlobalState = React.createContext({\n    categories: [],\n    clues: [],\n    validBoard: false,\n    offset: 0,\n    dailyDouble: 0,\n    answeredClues: [],\n    isLoading: true,\n});\n\nexport default GlobalState;\n\nexport const AppProvider = (props) => {\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case 'reset':\n                return initialState;\n            case 'categories':\n                return action.payload;\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // const [clueCount, setClueCount] = useState();\n    // const [categoryCount, setCategoryCount] = useState([]);\n    // const [categories, setCategories] = useState([]);\n    // const [clues, setClues] = useState([]);\n    // const [validBoard, setValidBoard] = useState(false);\n    // const [offset, setOffset] = useState(0);\n    // const [dailyDouble, setDailyDouble] = useState();\n    // const [answeredClues, setAnsweredClues] = useState([]);\n    // const [isLoading, setLoading] = useState(true);\n    // const [initialState, setInitialState] = useState();\n\n    return (\n        <GlobalState.Provider value={{ state, dispatch }}>\n            {props.children}\n        </GlobalState.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
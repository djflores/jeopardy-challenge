{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js\";\nimport React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nimport Box from '../components/Box';\nexport default class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    let value = this.context;\n\n    try {\n      axios('http://jservice.io/api/categories?count=100').then(async response => {\n        await response.data.map(item => {\n          const {\n            clues_count,\n            id\n          } = item;\n\n          if (clues_count >= value.categoryCount && this.state.categories.length < value.categoryCount) {\n            this.setState({\n              categories: this.state.categories.concat(item)\n            });\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      categories,\n      clues\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, categories.map((item, index) => {\n      const {\n        title\n      } = item;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        key: `col-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        category: title,\n        className: \"category\",\n        isCategory: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }\n      }), clues.map((item, index) => {\n        return item.map(clue => {\n          const {\n            value\n          } = clue;\n          console.log(this.context.clueCount);\n          return /*#__PURE__*/React.createElement(Box, {\n            value: value,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 52\n            }\n          });\n        });\n      }));\n    })));\n  }\n\n}\nBoard.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js"],"names":["React","Component","AppContext","axios","Box","Board","state","categories","isLoading","componentDidMount","value","context","then","response","data","map","item","clues_count","id","categoryCount","length","setState","concat","error","console","log","render","clues","index","title","clue","clueCount","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCK,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAFiC;AAAA;;AAMzCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKC,OAAjB;;AACA,QAAI;AACAR,MAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDS,IAArD,CACI,MAAOC,QAAP,IAAoB;AAChB,cAAMA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAU;AAC9B,gBAAM;AAAEC,YAAAA,WAAF;AAAeC,YAAAA;AAAf,cAAsBF,IAA5B;;AACA,cACIC,WAAW,IAAIP,KAAK,CAACS,aAArB,IACA,KAAKb,KAAL,CAAWC,UAAX,CAAsBa,MAAtB,GAA+BV,KAAK,CAACS,aAFzC,EAGE;AACE,iBAAKE,QAAL,CAAc;AACVd,cAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBe,MAAtB,CAA6BN,IAA7B;AADF,aAAd;AAGH;AACJ,SAVK,CAAN;AAWA,aAAKK,QAAL,CAAc;AAAEb,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAdL;AAgBH,KAjBD,CAiBE,OAAOe,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,UAAF;AAAcoB,MAAAA;AAAd,QAAwB,KAAKrB,KAAnC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,KAAL,CAAWE,SAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAGG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,UAAU,CAACQ,GAAX,CAAe,CAACC,IAAD,EAAOY,KAAP,KAAiB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAYb,IAAlB;AAEA,0BACI;AAAI,QAAA,GAAG,EAAG,OAAMY,KAAM,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AACI,QAAA,QAAQ,EAAEC,KADd;AAEI,QAAA,SAAS,EAAC,UAFd;AAGI,QAAA,UAAU,EAAE,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMKF,KAAK,CAACZ,GAAN,CAAU,CAACC,IAAD,EAAOY,KAAP,KAAiB;AACxB,eAAOZ,IAAI,CAACD,GAAL,CAAUe,IAAD,IAAU;AACtB,gBAAM;AAAEpB,YAAAA;AAAF,cAAYoB,IAAlB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,OAAL,CAAaoB,SAAzB;AACA,8BAAO,oBAAC,GAAD;AAAK,YAAA,KAAK,EAAErB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAJM,CAAP;AAKH,OANA,CANL,CADJ;AAgBH,KAnBA,CADL,CAJR,CADJ;AA8BH;;AA/DwC;AAAxBL,K,CACV2B,W,GAAc9B,U","sourcesContent":["import React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nimport Box from '../components/Box';\n\nexport default class Board extends Component {\n    static contextType = AppContext;\n    state = {\n        categories: [],\n        isLoading: true,\n    };\n    componentDidMount() {\n        let value = this.context;\n        try {\n            axios('http://jservice.io/api/categories?count=100').then(\n                async (response) => {\n                    await response.data.map((item) => {\n                        const { clues_count, id } = item;\n                        if (\n                            clues_count >= value.categoryCount &&\n                            this.state.categories.length < value.categoryCount\n                        ) {\n                            this.setState({\n                                categories: this.state.categories.concat(item),\n                            });\n                        }\n                    });\n                    this.setState({ isLoading: false });\n                }\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { categories, clues } = this.state;\n\n        return (\n            <div className=\"Board\">\n                {this.state.isLoading ? (\n                    <h2>Loading...</h2>\n                ) : (\n                    <React.Fragment>\n                        {categories.map((item, index) => {\n                            const { title } = item;\n\n                            return (\n                                <ul key={`col-${index}`}>\n                                    <Box\n                                        category={title}\n                                        className=\"category\"\n                                        isCategory={true}\n                                    />\n                                    {clues.map((item, index) => {\n                                        return item.map((clue) => {\n                                            const { value } = clue;\n                                            console.log(this.context.clueCount);\n                                            return <Box value={value} />;\n                                        });\n                                    })}\n                                </ul>\n                            );\n                        })}\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
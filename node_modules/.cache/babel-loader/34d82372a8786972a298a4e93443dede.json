{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js\";\nimport React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nimport Box from '../components/Box';\nexport default class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      clues: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    let value = this.context;\n\n    try {\n      axios('http://jservice.io/api/categories?count=100').then(async response => {\n        await response.data.map(item => {\n          const {\n            clues_count,\n            id\n          } = item;\n\n          if (clues_count >= value.categoryCount && this.state.categories.length < value.categoryCount) {\n            this.setState({\n              categories: this.state.categories.concat(item)\n            });\n            axios(`http://jservice.io/api/clues?category=${id}`).then(response => {\n              this.setState({\n                clues: this.state.clues.concat([response.data])\n              });\n            });\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      categories,\n      clues\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, categories.map((item, index) => {\n      const {\n        title\n      } = item;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        key: `col-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        category: title,\n        className: \"category\",\n        isCategory: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }), clues.map((item, index) => {\n        item.map(clue => {});\n      }));\n    })));\n  }\n\n}\nBoard.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js"],"names":["React","Component","AppContext","axios","Box","Board","state","categories","clues","isLoading","componentDidMount","value","context","then","response","data","map","item","clues_count","id","categoryCount","length","setState","concat","error","console","log","render","index","title","clue","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCK,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,SAAS,EAAE;AAHP,KAFiC;AAAA;;AAOzCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKC,OAAjB;;AACA,QAAI;AACAT,MAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDU,IAArD,CACI,MAAOC,QAAP,IAAoB;AAChB,cAAMA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAU;AAC9B,gBAAM;AAAEC,YAAAA,WAAF;AAAeC,YAAAA;AAAf,cAAsBF,IAA5B;;AACA,cACIC,WAAW,IAAIP,KAAK,CAACS,aAArB,IACA,KAAKd,KAAL,CAAWC,UAAX,CAAsBc,MAAtB,GAA+BV,KAAK,CAACS,aAFzC,EAGE;AACE,iBAAKE,QAAL,CAAc;AACVf,cAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBgB,MAAtB,CAA6BN,IAA7B;AADF,aAAd;AAIAd,YAAAA,KAAK,CACA,yCAAwCgB,EAAG,EAD3C,CAAL,CAEEN,IAFF,CAEQC,QAAD,IAAc;AACjB,mBAAKQ,QAAL,CAAc;AACVd,gBAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,CAAiBe,MAAjB,CAAwB,CAC3BT,QAAQ,CAACC,IADkB,CAAxB;AADG,eAAd;AAKH,aARD;AASH;AACJ,SApBK,CAAN;AAqBA,aAAKO,QAAL,CAAc;AAAEb,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAxBL;AA0BH,KA3BD,CA2BE,OAAOe,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAwB,KAAKF,KAAnC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,KAAL,CAAWG,SAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAGG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,UAAU,CAACS,GAAX,CAAe,CAACC,IAAD,EAAOW,KAAP,KAAiB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAYZ,IAAlB;AAEA,0BACI;AAAI,QAAA,GAAG,EAAG,OAAMW,KAAM,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AACI,QAAA,QAAQ,EAAEC,KADd;AAEI,QAAA,SAAS,EAAC,UAFd;AAGI,QAAA,UAAU,EAAE,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMKrB,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOW,KAAP,KAAiB;AACxBX,QAAAA,IAAI,CAACD,GAAL,CAAUc,IAAD,IAAU,CAAE,CAArB;AACH,OAFA,CANL,CADJ;AAYH,KAfA,CADL,CAJR,CADJ;AA0BH;;AArEwC;AAAxBzB,K,CACV0B,W,GAAc7B,U","sourcesContent":["import React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nimport Box from '../components/Box';\n\nexport default class Board extends Component {\n    static contextType = AppContext;\n    state = {\n        categories: [],\n        clues: [],\n        isLoading: true,\n    };\n    componentDidMount() {\n        let value = this.context;\n        try {\n            axios('http://jservice.io/api/categories?count=100').then(\n                async (response) => {\n                    await response.data.map((item) => {\n                        const { clues_count, id } = item;\n                        if (\n                            clues_count >= value.categoryCount &&\n                            this.state.categories.length < value.categoryCount\n                        ) {\n                            this.setState({\n                                categories: this.state.categories.concat(item),\n                            });\n\n                            axios(\n                                `http://jservice.io/api/clues?category=${id}`\n                            ).then((response) => {\n                                this.setState({\n                                    clues: this.state.clues.concat([\n                                        response.data,\n                                    ]),\n                                });\n                            });\n                        }\n                    });\n                    this.setState({ isLoading: false });\n                }\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        const { categories, clues } = this.state;\n        return (\n            <div className=\"Board\">\n                {this.state.isLoading ? (\n                    <h2>Loading...</h2>\n                ) : (\n                    <React.Fragment>\n                        {categories.map((item, index) => {\n                            const { title } = item;\n\n                            return (\n                                <ul key={`col-${index}`}>\n                                    <Box\n                                        category={title}\n                                        className=\"category\"\n                                        isCategory={true}\n                                    />\n                                    {clues.map((item, index) => {\n                                        item.map((clue) => {});\n                                    })}\n                                </ul>\n                            );\n                        })}\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
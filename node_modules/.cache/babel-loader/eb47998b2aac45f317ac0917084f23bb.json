{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/context/GlobalState.js\";\nimport React, { useReducer } from 'react';\nimport AppContext from './appContext';\nimport reducer from './reducer';\n\nconst AppState = props => {\n  const initialState = {\n    categories: [],\n    clues: [],\n    clueCount: 0,\n    usedCategories: [],\n    validBoard: false,\n    dailyDouble: {\n      id: 0,\n      index: 0\n    },\n    offset: 100,\n    answeredClues: [],\n    isLoading: true\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\nexport default AppState;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/context/GlobalState.js"],"names":["React","useReducer","AppContext","reducer","AppState","props","initialState","categories","clues","clueCount","usedCategories","validBoard","dailyDouble","id","index","offset","answeredClues","isLoading","state","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,EADK;AAEjBC,IAAAA,KAAK,EAAE,EAFU;AAGjBC,IAAAA,SAAS,EAAE,CAHM;AAIjBC,IAAAA,cAAc,EAAE,EAJC;AAKjBC,IAAAA,UAAU,EAAE,KALK;AAMjBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,EAAE,EAAE,CADK;AAETC,MAAAA,KAAK,EAAE;AAFE,KANI;AAUjBC,IAAAA,MAAM,EAAE,GAVS;AAWjBC,IAAAA,aAAa,EAAE,EAXE;AAYjBC,IAAAA,SAAS,EAAE;AAZM,GAArB;AAeA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACE,OAAD,EAAUG,YAAV,CAApC;AAEA,sBAAO,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDd,KAAK,CAACe,QAAxD,CAAP;AACH,CAnBD;;AAqBA,eAAehB,QAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AppContext from './appContext';\nimport reducer from './reducer';\n\nconst AppState = (props) => {\n    const initialState = {\n        categories: [],\n        clues: [],\n        clueCount: 0,\n        usedCategories: [],\n        validBoard: false,\n        dailyDouble: {\n            id: 0,\n            index: 0,\n        },\n        offset: 100,\n        answeredClues: [],\n        isLoading: true,\n    };\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return <AppContext.Provider value={{ state, dispatch }}>{props.children}</AppContext.Provider>;\n};\n\nexport default AppState;\n"]},"metadata":{},"sourceType":"module"}
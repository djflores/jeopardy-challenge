{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js\";\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nexport default class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    let value = this.context;\n\n    try {\n      axios('http://jservice.io/api/categories?count=100').then(async response => {\n        await response.data.map(item => {\n          const {\n            clues_count\n          } = item;\n\n          if (clues_count >= value.categoryCount) {\n            this.setState({\n              categories: this.state.categories.concat(item)\n            });\n          }\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }, \"this is a board\");\n  }\n\n}\nBoard.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js"],"names":["React","Component","useContext","useEffect","useState","AppContext","axios","Board","state","categories","componentDidMount","value","context","then","response","data","map","item","clues_count","categoryCount","setState","concat","error","console","log","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCO,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE;AADR,KAFiC;AAAA;;AAKzCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKC,OAAjB;;AACA,QAAI;AACAN,MAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDO,IAArD,CACI,MAAOC,QAAP,IAAoB;AAChB,cAAMA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAU;AAC9B,gBAAM;AAAEC,YAAAA;AAAF,cAAkBD,IAAxB;;AACA,cAAIC,WAAW,IAAIP,KAAK,CAACQ,aAAzB,EAAwC;AACpC,iBAAKC,QAAL,CAAc;AACVX,cAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBY,MAAtB,CAA6BJ,IAA7B;AADF,aAAd;AAGH;AACJ,SAPK,CAAN;AAQH,OAVL;AAYH,KAbD,CAaE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;;AA3BwC;AAAxBlB,K,CACVmB,W,GAAcrB,U","sourcesContent":["import React, { Component, useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\n\nexport default class Board extends Component {\n    static contextType = AppContext;\n    state = {\n        categories: [],\n    };\n    componentDidMount() {\n        let value = this.context;\n        try {\n            axios('http://jservice.io/api/categories?count=100').then(\n                async (response) => {\n                    await response.data.map((item) => {\n                        const { clues_count } = item;\n                        if (clues_count >= value.categoryCount) {\n                            this.setState({\n                                categories: this.state.categories.concat(item),\n                            });\n                        }\n                    });\n                }\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        return <div>this is a board</div>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
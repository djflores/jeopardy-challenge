{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { AppContext } from '../providers/AppContext';\nexport default class Box extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCategory: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n    const context = this.context;\n    console.log(context.offset);\n\n    if (!this.state.isCategory) {\n      axios(`http://jservice.io/api/clues?category=${id}&offset=${context.offset}`).then(response => {\n        const {\n          value\n        } = response.data;\n        console.log(response.data);\n        this.setState({\n          value: value\n        });\n      });\n    }\n\n    context.setOffset(context.offset++);\n  }\n\n  renderBox() {\n    const {\n      isCategory,\n      id\n    } = this.props;\n    const {\n      value\n    } = this.state;\n\n    if (isCategory) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, this.props.category);\n    } else {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      }, value);\n    }\n  }\n\n  render() {\n    return this.renderBox();\n  }\n\n}\nBox.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js"],"names":["React","Component","axios","AppContext","Box","state","isCategory","componentDidMount","id","props","context","console","log","offset","then","response","value","data","setState","setOffset","renderBox","category","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACJC,MAAAA,UAAU,EAAE;AADR,KAF+B;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,MAApB;;AAEA,QAAI,CAAC,KAAKR,KAAL,CAAWC,UAAhB,EAA4B;AACxBJ,MAAAA,KAAK,CACA,yCAAwCM,EAAG,WAAUE,OAAO,CAACG,MAAO,EADpE,CAAL,CAEEC,IAFF,CAEQC,QAAD,IAAc;AACjB,cAAM;AAAEC,UAAAA;AAAF,YAAYD,QAAQ,CAACE,IAA3B;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACE,IAArB;AACA,aAAKC,QAAL,CAAc;AACVF,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGH,OARD;AASH;;AACDN,IAAAA,OAAO,CAACS,SAAR,CAAkBT,OAAO,CAACG,MAAR,EAAlB;AACH;;AAEDO,EAAAA,SAAS,GAAG;AACR,UAAM;AAAEd,MAAAA,UAAF;AAAcE,MAAAA;AAAd,QAAqB,KAAKC,KAAhC;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAY,KAAKX,KAAvB;;AACA,QAAIC,UAAJ,EAAgB;AACZ,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKG,KAAL,CAAWY,QAAhB,CAAP;AACH,KAFD,MAEO;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,KAAL,CAAP;AACH;AACJ;;AAEDM,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKF,SAAL,EAAP;AACH;;AArCsC;AAAtBhB,G,CACVmB,W,GAAcpB,U","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { AppContext } from '../providers/AppContext';\n\nexport default class Box extends Component {\n    static contextType = AppContext;\n    state = {\n        isCategory: false,\n    };\n\n    componentDidMount() {\n        const { id } = this.props;\n        const context = this.context;\n        console.log(context.offset);\n\n        if (!this.state.isCategory) {\n            axios(\n                `http://jservice.io/api/clues?category=${id}&offset=${context.offset}`\n            ).then((response) => {\n                const { value } = response.data;\n                console.log(response.data);\n                this.setState({\n                    value: value,\n                });\n            });\n        }\n        context.setOffset(context.offset++);\n    }\n\n    renderBox() {\n        const { isCategory, id } = this.props;\n        const { value } = this.state;\n        if (isCategory) {\n            return <li>{this.props.category}</li>;\n        } else {\n            return <li>{value}</li>;\n        }\n    }\n\n    render() {\n        return this.renderBox();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/AppContext.js\";\nimport React, { createContext, useState } from 'react';\nexport const AppContext = createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [clueCount, setClueCount] = useState();\n  const [categoryCount, setCategoryCount] = useState();\n  const [categories, setCategories] = useState([]);\n  const [validBoard, setValidBoard] = useState(false);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      categoryCount,\n      categories,\n      clueCount,\n      validBoard,\n      setCategoryCount,\n      setCategories,\n      setClueCount,\n      setValidBoard\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/AppContext.js"],"names":["React","createContext","useState","AppContext","AppProvider","children","clueCount","setClueCount","categoryCount","setCategoryCount","categories","setCategories","validBoard","setValidBoard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,UAAU,GAAGF,aAAa,EAAhC;AAEP,OAAO,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,EAAlD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,aADG;AAEHE,MAAAA,UAFG;AAGHJ,MAAAA,SAHG;AAIHM,MAAAA,UAJG;AAKHH,MAAAA,gBALG;AAMHE,MAAAA,aANG;AAOHJ,MAAAA,YAPG;AAQHM,MAAAA;AARG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYKR,QAZL,CADJ;AAgBH,CArBM","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n    const [clueCount, setClueCount] = useState();\n    const [categoryCount, setCategoryCount] = useState();\n    const [categories, setCategories] = useState([]);\n    const [validBoard, setValidBoard] = useState(false);\n    return (\n        <AppContext.Provider\n            value={{\n                categoryCount,\n                categories,\n                clueCount,\n                validBoard,\n                setCategoryCount,\n                setCategories,\n                setClueCount,\n                setValidBoard,\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
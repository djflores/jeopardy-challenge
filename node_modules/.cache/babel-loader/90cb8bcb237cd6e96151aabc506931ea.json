{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Clue.js\";\nimport React, { Component } from 'react';\nexport default class Clue extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      question: '',\n      answer: '',\n      isLoading: true,\n      showClue: true\n    };\n\n    this.toggleClue = () => {\n      this.setState({\n        showClue: !this.state.showClue\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      question,\n      answer,\n      clue\n    } = this.props.location.state;\n    this.setState({\n      question: question,\n      answer: answer,\n      isLoading: false,\n      clue: clue\n    });\n  }\n\n  render() {\n    const {\n      question,\n      answer,\n      isLoading,\n      showClue,\n      clue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, !showClue ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 30\n      }\n    }, clue) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 46\n      }\n    }, question), showClue ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleClue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"Show Question\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleClue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Show Clue\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Done\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Clue.js"],"names":["React","Component","Clue","state","question","answer","isLoading","showClue","toggleClue","setState","componentDidMount","clue","props","location","render","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACxCE,KADwC,GAChC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,QAAQ,EAAE;AAJN,KADgC;;AAAA,SAiBxCC,UAjBwC,GAiB3B,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEF,QAAAA,QAAQ,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAxB,OAAd;AACH,KAnBuC;AAAA;;AAOxCG,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEN,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBM,MAAAA;AAApB,QAA6B,KAAKC,KAAL,CAAWC,QAAX,CAAoBV,KAAvD;AACA,SAAKM,QAAL,CAAc;AACVL,MAAAA,QAAQ,EAAEA,QADA;AAEVC,MAAAA,MAAM,EAAEA,MAFE;AAGVC,MAAAA,SAAS,EAAE,KAHD;AAIVK,MAAAA,IAAI,EAAEA;AAJI,KAAd;AAMH;;AAMDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,QAA/B;AAAyCI,MAAAA;AAAzC,QAAkD,KAAKR,KAA7D;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACI,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAII,IAAJ,CAAZ,gBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,QAAJ,CADjC,EAEKG,QAAQ,gBACL;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADK,gBAGL;AAAQ,MAAA,OAAO,EAAE,KAAKA,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALR,eAOI;AAAQ,MAAA,OAAO,EAAE,KAAKO,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ;AAWH;;AAlCuC","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Clue extends Component {\n    state = {\n        question: '',\n        answer: '',\n        isLoading: true,\n        showClue: true,\n    };\n    componentDidMount() {\n        const { question, answer, clue } = this.props.location.state;\n        this.setState({\n            question: question,\n            answer: answer,\n            isLoading: false,\n            clue: clue,\n        });\n    }\n\n    toggleClue = () => {\n        this.setState({ showClue: !this.state.showClue });\n    };\n\n    render() {\n        const { question, answer, isLoading, showClue, clue } = this.state;\n        return (\n            <div>\n                {!showClue ? <p>{clue}</p> : <p>{question}</p>}\n                {showClue ? (\n                    <button onClick={this.toggleClue}>Show Question</button>\n                ) : (\n                    <button onClick={this.toggleClue}>Show Clue</button>\n                )}\n                <button onClick={this.handleClick}>Done</button>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js\";\nimport React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nexport default class Box extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCategory: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n\n    if (id) {\n      axios(`http://jservice.io/api/clues?category=${id}`).then(response => {\n        this.setState({\n          clues: response.data\n        });\n      });\n    }\n  }\n\n  renderBox() {\n    const {\n      isCategory\n    } = this.props;\n    const context = this.context;\n    const {\n      clues\n    } = this.state;\n    console.log(clues);\n\n    if (clues) {\n      return clues.map((key, index) => {\n        const {\n          value,\n          question\n        } = key;\n        if (index < context.clueCount) return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 55\n          }\n        }, question);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    const {\n      isCategory,\n      category\n    } = this.props;\n    return;\n  }\n\n}\nBox.contextType = AppContext;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js"],"names":["React","Component","AppContext","axios","Box","state","isCategory","componentDidMount","id","props","then","response","setState","clues","data","renderBox","context","console","log","map","key","index","value","question","clueCount","render","category","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACJC,MAAAA,UAAU,EAAE;AADR,KAF+B;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;;AACA,QAAID,EAAJ,EAAQ;AACJL,MAAAA,KAAK,CAAE,yCAAwCK,EAAG,EAA7C,CAAL,CAAqDE,IAArD,CACKC,QAAD,IAAc;AACV,aAAKC,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEF,QAAQ,CAACG;AADN,SAAd;AAGH,OALL;AAOH;AACJ;;AAEDC,EAAAA,SAAS,GAAG;AACR,UAAM;AAAET,MAAAA;AAAF,QAAiB,KAAKG,KAA5B;AACA,UAAMO,OAAO,GAAG,KAAKA,OAArB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,QAAIA,KAAJ,EAAW;AACP,aAAOA,KAAK,CAACM,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAsBH,GAA5B;AACA,YAAIC,KAAK,GAAGL,OAAO,CAACQ,SAApB,EAA+B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAL,CAAP;AAClC,OAHM,CAAP;AAIH;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,UAAF;AAAcoB,MAAAA;AAAd,QAA2B,KAAKjB,KAAtC;AACA;AACH;;AApCsC;AAAtBL,G,CACVuB,W,GAAczB,U","sourcesContent":["import React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\n\nexport default class Box extends Component {\n    static contextType = AppContext;\n    state = {\n        isCategory: false,\n    };\n\n    componentDidMount() {\n        const { id } = this.props;\n        if (id) {\n            axios(`http://jservice.io/api/clues?category=${id}`).then(\n                (response) => {\n                    this.setState({\n                        clues: response.data,\n                    });\n                }\n            );\n        }\n    }\n\n    renderBox() {\n        const { isCategory } = this.props;\n        const context = this.context;\n        const { clues } = this.state;\n        console.log(clues);\n        if (clues) {\n            return clues.map((key, index) => {\n                const { value, question } = key;\n                if (index < context.clueCount) return <li>{question}</li>;\n            });\n        }\n        return <li></li>;\n    }\n\n    render() {\n        const { isCategory, category } = this.props;\n        return;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
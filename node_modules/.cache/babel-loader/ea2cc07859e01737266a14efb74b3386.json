{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nexport const GlobalState = createContext();\nconst initialState = [{\n  categories: [],\n  clues: [],\n  validBoard: false,\n  offset: 0,\n  dailyDouble: 0,\n  answeredClues: [],\n  isLoading: true\n}];\nexport const AppProvider = ({\n  children\n}) => {\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'reset':\n        return initialState;\n\n      case 'categories':\n        return action.payload;\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState); // const [clueCount, setClueCount] = useState();\n  // const [categoryCount, setCategoryCount] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  // const [clues, setClues] = useState([]);\n  // const [validBoard, setValidBoard] = useState(false);\n  // const [offset, setOffset] = useState(0);\n  // const [dailyDouble, setDailyDouble] = useState();\n  // const [answeredClues, setAnsweredClues] = useState([]);\n  // const [isLoading, setLoading] = useState(true);\n  // const [initialState, setInitialState] = useState();\n\n  return /*#__PURE__*/React.createElement(GlobalState.Provider, {\n    value: [state, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js"],"names":["React","createContext","useReducer","GlobalState","initialState","categories","clues","validBoard","offset","dailyDouble","answeredClues","isLoading","AppProvider","children","reducer","state","action","type","payload","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AAEP,MAAMG,YAAY,GAAG,CACjB;AACIC,EAAAA,UAAU,EAAE,EADhB;AAEIC,EAAAA,KAAK,EAAE,EAFX;AAGIC,EAAAA,UAAU,EAAE,KAHhB;AAIIC,EAAAA,MAAM,EAAE,CAJZ;AAKIC,EAAAA,WAAW,EAAE,CALjB;AAMIC,EAAAA,aAAa,EAAE,EANnB;AAOIC,EAAAA,SAAS,EAAE;AAPf,CADiB,CAArB;AAWA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,OAAL;AACI,eAAOb,YAAP;;AACJ,WAAK,YAAL;AACI,eAAOY,MAAM,CAACE,OAAd;;AACJ;AACI,eAAOH,KAAP;AANR;AAQH,GATD;;AAUA,QAAM,CAACA,KAAD,EAAQI,QAAR,IAAoBjB,UAAU,CAACY,OAAD,EAAUV,YAAV,CAApC,CAXyC,CAYzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACW,KAAD,EAAQI,QAAR,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QADL,CADJ;AAKH,CA5BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nexport const GlobalState = createContext();\n\nconst initialState = [\n    {\n        categories: [],\n        clues: [],\n        validBoard: false,\n        offset: 0,\n        dailyDouble: 0,\n        answeredClues: [],\n        isLoading: true,\n    },\n];\nexport const AppProvider = ({ children }) => {\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case 'reset':\n                return initialState;\n            case 'categories':\n                return action.payload;\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // const [clueCount, setClueCount] = useState();\n    // const [categoryCount, setCategoryCount] = useState([]);\n    // const [categories, setCategories] = useState([]);\n    // const [clues, setClues] = useState([]);\n    // const [validBoard, setValidBoard] = useState(false);\n    // const [offset, setOffset] = useState(0);\n    // const [dailyDouble, setDailyDouble] = useState();\n    // const [answeredClues, setAnsweredClues] = useState([]);\n    // const [isLoading, setLoading] = useState(true);\n    // const [initialState, setInitialState] = useState();\n\n    return (\n        <GlobalState.Provider value={[state, dispatch]}>\n            {children}\n        </GlobalState.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js\";\nimport React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport { withRouter } from 'react-router-dom';\n\nclass Box extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCategory: false\n    };\n\n    this.handleClick = e => {\n      const {\n        question,\n        id,\n        title\n      } = this.state;\n      this.props.history.push({\n        pathname: `/clue/${id}`,\n        state: {\n          question: question,\n          clue: title\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const context = this.context;\n    const {\n      question,\n      id,\n      answer,\n      title,\n      selected\n    } = this.props;\n    this.setState({\n      question: question,\n      answer: answer,\n      title: title,\n      id: id,\n      selected: selected\n    });\n  }\n\n  render() {\n    const {\n      isCategory,\n      category,\n      value\n    } = this.props;\n\n    if (isCategory) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, category);\n    } else {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"clue\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, value);\n    }\n  }\n\n}\n\nBox.contextType = AppContext;\nexport default withRouter(Box);","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/components/Box.js"],"names":["React","Component","AppContext","withRouter","Box","state","isCategory","handleClick","e","question","id","title","props","history","push","pathname","clue","componentDidMount","context","answer","selected","setState","render","category","value","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBI,KAFwB,GAEhB;AACJC,MAAAA,UAAU,EAAE;AADR,KAFgB;;AAAA,SAkBxBC,WAlBwB,GAkBTC,CAAD,IAAO;AACjB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,EAAZ;AAAgBC,QAAAA;AAAhB,UAA0B,KAAKN,KAArC;AACA,WAAKO,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAG,SAAQL,EAAG,EADF;AAEpBL,QAAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBO,UAAAA,IAAI,EAAEL;AAA5B;AAFa,OAAxB;AAIH,KAxBuB;AAAA;;AAMxBM,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,OAAO,GAAG,KAAKA,OAArB;AACA,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA,EAAZ;AAAgBS,MAAAA,MAAhB;AAAwBR,MAAAA,KAAxB;AAA+BS,MAAAA;AAA/B,QAA4C,KAAKR,KAAvD;AACA,SAAKS,QAAL,CAAc;AACVZ,MAAAA,QAAQ,EAAEA,QADA;AAEVU,MAAAA,MAAM,EAAEA,MAFE;AAGVR,MAAAA,KAAK,EAAEA,KAHG;AAIVD,MAAAA,EAAE,EAAEA,EAJM;AAKVU,MAAAA,QAAQ,EAAEA;AALA,KAAd;AAOH;;AAUDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA,UAAF;AAAciB,MAAAA,QAAd;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKZ,KAA7C;;AACA,QAAIN,UAAJ,EAAgB;AACZ,0BAAO;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BiB,QAA1B,CAAP;AACH,KAFD,MAEO;AACH,0BACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAqB,QAAA,OAAO,EAAE,KAAKhB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKiB,KADL,CADJ;AAKH;AACJ;;AArCuB;;AAAtBpB,G,CACKqB,W,GAAcvB,U;AAuCzB,eAAeC,UAAU,CAACC,GAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport { withRouter } from 'react-router-dom';\n\nclass Box extends Component {\n    static contextType = AppContext;\n    state = {\n        isCategory: false,\n    };\n\n    componentDidMount() {\n        const context = this.context;\n        const { question, id, answer, title, selected } = this.props;\n        this.setState({\n            question: question,\n            answer: answer,\n            title: title,\n            id: id,\n            selected: selected,\n        });\n    }\n\n    handleClick = (e) => {\n        const { question, id, title } = this.state;\n        this.props.history.push({\n            pathname: `/clue/${id}`,\n            state: { question: question, clue: title },\n        });\n    };\n\n    render() {\n        const { isCategory, category, value } = this.props;\n        if (isCategory) {\n            return <li className=\"category\">{category}</li>;\n        } else {\n            return (\n                <li className=\"clue\" onClick={this.handleClick}>\n                    {value}\n                </li>\n            );\n        }\n    }\n}\n\nexport default withRouter(Box);\n"]},"metadata":{},"sourceType":"module"}
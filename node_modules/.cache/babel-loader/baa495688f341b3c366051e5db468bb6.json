{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nexport const GlobalState = createContext();\nconst initialState = {\n  categories: [],\n  clues: [],\n  validBoard: false,\n  offset: 0,\n  dailyDouble: 0,\n  answeredClues: [],\n  isLoading: true\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'reset':\n      return initialState;\n\n    case 'categories':\n      return action.payload;\n\n    default:\n      return '';\n  }\n};\n\nconst [state, dispatch] = useReducer(reducer, initialState);\nconst value = {\n  state,\n  dispatch\n};\nexport const AppProvider = ({\n  children\n}) => {\n  // const [clueCount, setClueCount] = useState();\n  // const [categoryCount, setCategoryCount] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  // const [clues, setClues] = useState([]);\n  // const [validBoard, setValidBoard] = useState(false);\n  // const [offset, setOffset] = useState(0);\n  // const [dailyDouble, setDailyDouble] = useState();\n  // const [answeredClues, setAnsweredClues] = useState([]);\n  // const [isLoading, setLoading] = useState(true);\n  // const [initialState, setInitialState] = useState();\n  return /*#__PURE__*/React.createElement(GlobalState.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/GlobalState.js"],"names":["React","createContext","useReducer","GlobalState","initialState","categories","clues","validBoard","offset","dailyDouble","answeredClues","isLoading","reducer","state","action","type","payload","dispatch","value","AppProvider","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AAEP,MAAMG,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,MAAM,EAAE,CAJS;AAKjBC,EAAAA,WAAW,EAAE,CALI;AAMjBC,EAAAA,aAAa,EAAE,EANE;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,aAAOX,YAAP;;AACJ,SAAK,YAAL;AACI,aAAOU,MAAM,CAACE,OAAd;;AACJ;AACI,aAAO,EAAP;AANR;AAQH,CATD;;AAWA,MAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBf,UAAU,CAACU,OAAD,EAAUR,YAAV,CAApC;AACA,MAAMc,KAAK,GAAG;AAAEL,EAAAA,KAAF;AAASI,EAAAA;AAAT,CAAd;AACA,OAAO,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCE,QAArC,CADJ;AAGH,CAfM","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nexport const GlobalState = createContext();\n\nconst initialState = {\n    categories: [],\n    clues: [],\n    validBoard: false,\n    offset: 0,\n    dailyDouble: 0,\n    answeredClues: [],\n    isLoading: true,\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'reset':\n            return initialState;\n        case 'categories':\n            return action.payload;\n        default:\n            return '';\n    }\n};\n\nconst [state, dispatch] = useReducer(reducer, initialState);\nconst value = { state, dispatch };\nexport const AppProvider = ({ children }) => {\n    // const [clueCount, setClueCount] = useState();\n    // const [categoryCount, setCategoryCount] = useState([]);\n    // const [categories, setCategories] = useState([]);\n    // const [clues, setClues] = useState([]);\n    // const [validBoard, setValidBoard] = useState(false);\n    // const [offset, setOffset] = useState(0);\n    // const [dailyDouble, setDailyDouble] = useState();\n    // const [answeredClues, setAnsweredClues] = useState([]);\n    // const [isLoading, setLoading] = useState(true);\n    // const [initialState, setInitialState] = useState();\n\n    return (\n        <GlobalState.Provider value={value}>{children}</GlobalState.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
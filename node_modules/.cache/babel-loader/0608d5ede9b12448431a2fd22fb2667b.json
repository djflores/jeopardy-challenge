{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/AppContext.js\";\nimport React, { createContext, useState, useReducer } from 'react';\nexport const AppContext = createContext();\nconst initialState = {\n  categories: [],\n  clues: [],\n  validBoard: false,\n  offset: 0,\n  dailyDouble: 0,\n  answeredClues: [],\n  isLoading: true\n};\nexport const AppProvider = ({\n  children\n}) => {\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'reset':\n        return initialState;\n\n      case 'categories':\n        return;\n\n      case 'offset':\n        return;\n\n      default:\n        return state;\n    }\n  }; // const [clueCount, setClueCount] = useState();\n  // const [categoryCount, setCategoryCount] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  // const [clues, setClues] = useState([]);\n  // const [validBoard, setValidBoard] = useState(false);\n  // const [offset, setOffset] = useState(0);\n  // const [dailyDouble, setDailyDouble] = useState();\n  // const [answeredClues, setAnsweredClues] = useState([]);\n  // const [isLoading, setLoading] = useState(true);\n  // const [initialState, setInitialState] = useState();\n\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      initialState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/providers/AppContext.js"],"names":["React","createContext","useState","useReducer","AppContext","initialState","categories","clues","validBoard","offset","dailyDouble","answeredClues","isLoading","AppProvider","children","reducer","state","action","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AAEA,OAAO,MAAMC,UAAU,GAAGH,aAAa,EAAhC;AAEP,MAAMI,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,MAAM,EAAE,CAJS;AAKjBC,EAAAA,WAAW,EAAE,CALI;AAMjBC,EAAAA,aAAa,EAAE,EANE;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;AAUA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,OAAL;AACI,eAAOb,YAAP;;AACJ,WAAK,YAAL;AACI;;AACJ,WAAK,QAAL;AACI;;AACJ;AACI,eAAOW,KAAP;AARR;AAUH,GAXD,CADyC,CAazC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACHX,MAAAA;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKS,QALL,CADJ;AASH,CAjCM","sourcesContent":["import React, { createContext, useState, useReducer } from 'react';\n\nexport const AppContext = createContext();\n\nconst initialState = {\n    categories: [],\n    clues: [],\n    validBoard: false,\n    offset: 0,\n    dailyDouble: 0,\n    answeredClues: [],\n    isLoading: true,\n};\n\nexport const AppProvider = ({ children }) => {\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case 'reset':\n                return initialState;\n            case 'categories':\n                return;\n            case 'offset':\n                return;\n            default:\n                return state;\n        }\n    };\n    // const [clueCount, setClueCount] = useState();\n    // const [categoryCount, setCategoryCount] = useState([]);\n    // const [categories, setCategories] = useState([]);\n    // const [clues, setClues] = useState([]);\n    // const [validBoard, setValidBoard] = useState(false);\n    // const [offset, setOffset] = useState(0);\n    // const [dailyDouble, setDailyDouble] = useState();\n    // const [answeredClues, setAnsweredClues] = useState([]);\n    // const [isLoading, setLoading] = useState(true);\n    // const [initialState, setInitialState] = useState();\n\n    return (\n        <AppContext.Provider\n            value={{\n                initialState,\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
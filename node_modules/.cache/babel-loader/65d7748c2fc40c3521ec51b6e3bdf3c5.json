{"ast":null,"code":"var _jsxFileName = \"/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js\";\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\nexport default class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.board = useContext(AppContext);\n\n    this.init = async () => {\n      try {\n        axios('http://jservice.io/api/categories?count=100').then(response => {\n          response.data.map(async (item, index) => {\n            const {\n              clues_count\n            } = item;\n\n            if (clues_count >= board.categoryCount) {\n              const t = categories.concat(item);\n              setCategories(t);\n              console.log(categories);\n            }\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    }, \"this is a board\");\n  }\n\n}","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/views/Board.js"],"names":["React","Component","useContext","useEffect","useState","AppContext","axios","Board","board","init","then","response","data","map","item","index","clues_count","categoryCount","t","categories","concat","setCategories","console","log","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCO,KADyC,GACjCN,UAAU,CAACG,UAAD,CADuB;;AAAA,SAGzCI,IAHyC,GAGlC,YAAY;AACf,UAAI;AACAH,QAAAA,KAAK,CAAC,6CAAD,CAAL,CAAqDI,IAArD,CACKC,QAAD,IAAc;AACVA,UAAAA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AACrC,kBAAM;AAAEC,cAAAA;AAAF,gBAAkBF,IAAxB;;AACA,gBAAIE,WAAW,IAAIR,KAAK,CAACS,aAAzB,EAAwC;AACpC,oBAAMC,CAAC,GAAGC,UAAU,CAACC,MAAX,CAAkBN,IAAlB,CAAV;AACAO,cAAAA,aAAa,CAACH,CAAD,CAAb;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACH;AACJ,WAPD;AAQH,SAVL;AAYH,OAbD,CAaE,OAAOK,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,KApBwC;AAAA;;AAsBzCC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;;AA1BwC","sourcesContent":["import React, { Component, useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../providers/AppContext';\nimport axios from 'axios';\n\nexport default class Board extends Component {\n    board = useContext(AppContext);\n\n    init = async () => {\n        try {\n            axios('http://jservice.io/api/categories?count=100').then(\n                (response) => {\n                    response.data.map(async (item, index) => {\n                        const { clues_count } = item;\n                        if (clues_count >= board.categoryCount) {\n                            const t = categories.concat(item);\n                            setCategories(t);\n                            console.log(categories);\n                        }\n                    });\n                }\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    componentDidMount() {}\n\n    render() {\n        return <div>this is a board</div>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
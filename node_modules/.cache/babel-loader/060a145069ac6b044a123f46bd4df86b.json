{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case 'reset':\n      const initialState = {\n        categories: [],\n        clues: [],\n        validBoard: false,\n        dailyDouble: 0,\n        offset: state.offset,\n        answeredClues: [],\n        isLoading: true\n      };\n      state = initialState;\n      return { ...state,\n        offset: state.offset + 100\n      };\n\n    case 'setCategories':\n      return { ...state,\n        categories: [...state.categories, action.payload]\n      };\n\n    case 'setClues':\n      return { ...state,\n        clues: [...state.clues, action.payload]\n      };\n\n    case 'answeredClues':\n      return { ...state,\n        answeredClues: [...state.answeredClues, action.payload]\n      };\n\n    case 'isLoading':\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case 'dailyDouble':\n      return { ...state,\n        dailyDouble: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/damionflores/Desktop/code/jeopardy-challenge/src/context/reducer.js"],"names":["reducer","state","action","type","initialState","categories","clues","validBoard","dailyDouble","offset","answeredClues","isLoading","payload"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,YAAMC,YAAY,GAAG;AACjBC,QAAAA,UAAU,EAAE,EADK;AAEjBC,QAAAA,KAAK,EAAE,EAFU;AAGjBC,QAAAA,UAAU,EAAE,KAHK;AAIjBC,QAAAA,WAAW,EAAE,CAJI;AAKjBC,QAAAA,MAAM,EAAER,KAAK,CAACQ,MALG;AAMjBC,QAAAA,aAAa,EAAE,EANE;AAOjBC,QAAAA,SAAS,EAAE;AAPM,OAArB;AASAV,MAAAA,KAAK,GAAGG,YAAR;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYQ,QAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,GAAe;AAAnC,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHI,QAAAA,UAAU,EAAE,CAAC,GAAGJ,KAAK,CAACI,UAAV,EAAsBH,MAAM,CAACU,OAA7B;AAFT,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGX,KADA;AAEHK,QAAAA,KAAK,EAAE,CAAC,GAAGL,KAAK,CAACK,KAAV,EAAiBJ,MAAM,CAACU,OAAxB;AAFJ,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGX,KADA;AAEHS,QAAAA,aAAa,EAAE,CAAC,GAAGT,KAAK,CAACS,aAAV,EAAyBR,MAAM,CAACU,OAAhC;AAFZ,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGX,KADA;AAEHU,QAAAA,SAAS,EAAET,MAAM,CAACU;AAFf,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGX,KAAL;AAAYO,QAAAA,WAAW,EAAEN,MAAM,CAACU;AAAhC,OAAP;;AACJ;AACI,aAAOX,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n    switch (action.type) {\n        case 'reset':\n            const initialState = {\n                categories: [],\n                clues: [],\n                validBoard: false,\n                dailyDouble: 0,\n                offset: state.offset,\n                answeredClues: [],\n                isLoading: true,\n            };\n            state = initialState;\n            return { ...state, offset: state.offset + 100 };\n        case 'setCategories':\n            return {\n                ...state,\n                categories: [...state.categories, action.payload],\n            };\n        case 'setClues':\n            return {\n                ...state,\n                clues: [...state.clues, action.payload],\n            };\n        case 'answeredClues':\n            return {\n                ...state,\n                answeredClues: [...state.answeredClues, action.payload],\n            };\n        case 'isLoading':\n            return {\n                ...state,\n                isLoading: action.payload,\n            };\n        case 'dailyDouble':\n            return { ...state, dailyDouble: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}